Feature: Tekton review and build pipeline with github  Scenario Outline: Check pipelines for <codeLanguage> added with default version using github import strategy    When User deletes <applicationName> Sonar project if present    Given User generates "<codeLanguage>" github project with "<applicationName>" project name    And User imports default codebase from github      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates pull request to "<defaultBranchName>" target branch in github "<applicationName>" project    Then User checks review pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    And User merges pull request in github "<applicationName>" project    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    And User deletes "<applicationName>" codebase resources    And User deletes "<applicationName>" github project    @TektonGithub @TektonGithubSmoke    Examples:      | applicationName                    | codeLanguage             | defaultBranchName |      | java8-mvn-import-def-github-build  | java8_maven_application  | master            |      | java11-mvn-import-def-github-build | java11_maven_application | master            |      | js-import-def-github-build         | react_application        | master            |      | python-3-8-import-def-github-build | python_3_8_application   | master            |    @TektonGithub    Examples:      | applicationName                         | codeLanguage                 | defaultBranchName |      | container-lib-import-def-github-build   | docker_library               | master            |      | dotnet-3-1-import-def-github-build      | dotnet_3_1_application       | master            |      | dotnet-3-1-lib-import-def-github-build  | dotnet_3_1_library           | master            |      | dotnet-6-0-import-def-github-build      | dotnet_6_0_application       | master            |      | dotnet-6-0-lib-import-def-github-build  | dotnet_6_0_library           | master            |      | go-beego-import-def-github-build        | beego_application            | master            |      | go-operator-sdk-import-def-github-build | operator_sdk_application     | master            |      | go-gin-import-def-github-build          | go_go_gin_application        | master            |      | groovy-lib-import-def-github-build      | codenarc_library             | master            |      | pipeline-import-def-github-build        | pipeline_library             | master            |      | java8-grd-import-def-github-build       | java8_gradle_application     | master            |      | java8-mvn-lib-import-def-github-build   | java8_maven_library          | master            |      | java8-grd-lib-import-def-github-build   | java8_gradle_library         | master            |      | java11-grd-import-def-github-build      | java11_gradle_application    | master            |      | java11-mvn-lib-import-def-github-build  | java11_maven_library         | master            |      | java11-grd-lib-import-def-github-build  | java11_gradle_library        | master            |      | java17-mvn-import-def-github-build      | java17_maven_application     | master            |      | java17-grd-import-def-github-build      | java17_gradle_application    | master            |      | java17-mvn-lib-import-def-github-build  | java17_maven_library         | master            |      | java17-grd-lib-import-def-github-build  | java17_gradle_library        | master            |      | java21-mvn-import-def-github-build      | java21_maven_application     | master            |      | java21-grd-import-def-github-build      | java21_gradle_application    | master            |      | java21-mvn-lib-import-def-github-build  | java21_maven_library         | master            |      | java21-grd-lib-import-def-github-build  | java21_gradle_library        | master            |      | js-lib-import-def-github-build          | react_library                | master            |      | angular-import-def-github-build         | angular_application          | master            |      | angular-lib-import-def-github-build     | angular_library              | master            |      | express-import-def-github-build         | express_application          | master            |      | express-lib-import-def-github-build     | express_library              | master            |      | vue-import-def-github-build             | vue_application              | master            |      | vue-lib-import-def-github-build         | vue_library                  | master            |      | next-import-def-github-build            | next_application             | master            |      | antora-import-def-github-build          | antora_application           | main              |      | js-ang-pnpm-imp-def-gh-build            | angular_pnpm_application     | master            |      | js-expr-pnpm-imp-def-gh-build           | express_pnpm_application     | master            |      | js-vue-pnpm-imp-def-gh-build            | vue_pnpm_application         | master            |      | js-next-pnpm-imp-def-gh-build           | next_pnpm_application        | master            |      | js-ant-pnpm-imp-def-gh-build            | antora_pnpm_application      | main              |      | js-r-pnpm-lib-import-def-gh-bld         | react_pnpm_library           | master            |      | js-ang-pnpm-lib-imp-def-gh-bld          | angular_pnpm_library         | master            |      | js-expr-pnpm-lib-imp-def-gh-bld         | express_pnpm_library         | master            |      | js-vue-pnpm-lib-imp-def-gh-bld          | vue_pnpm_library             | master            |      | python-3-8-lib-import-def-github-build  | python_3_8_library           | master            |      | python-fastapi-import-def-github-build  | python_fastapi_application   | master            |      | python-flask-import-def-github-build    | python_flask_application     | master            |      | rego-opa-lib-import-def-github-build    | opa_library                  | master            |      | terraform-lib-import-def-github-build   | hcl_terraform_library        | master            |      | postgresql                              | helm_application             | master            |      | charts-lib-import-def-github-build      | charts_library               | master            |      | terraform-inf-create-def-github-build   | hcl_terraform_infrastructure | master            |      | java8-grd-auto-import-def-github-build  | java8_gradle_autotest        | master            |      | java11-mvn-auto-import-def-github-build | java11_maven_autotest        | master            |      | java17-grd-auto-import-def-github-build | java17_gradle_autotest       | master            |      | java21-grd-auto-import-def-github-build | java21_gradle_autotest       | master            |  Scenario Outline: Check pipelines for release branch of <codeLanguage> added with semver version using github create strategy    When User deletes <applicationName> Sonar project if present    Given User creates semver codebase on github      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | 1.2.3-SNAPSHOT    |      | isPrivate       | true              |    When User creates new branch      | applicationName  | <applicationName>  |      | branchName       | new                |      | newBranchVersion | 1.2.3-NEW-SNAPSHOT |    And User triggers build pipeline type for new branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver         |    Then User checks build pipeline status for "new" branch in "<applicationName>" codebase    When User creates pull request to "new" target branch in github "<applicationName>" project    Then User checks review pipeline status for "new" branch in "<applicationName>" codebase    And User merges pull request in github "<applicationName>" project    Then User checks build pipeline status for "new" branch in "<applicationName>" codebase    And User deletes "<applicationName>" codebase resources    And User deletes "<applicationName>" github project    @TektonGithub @TektonGithubShortRegression    Examples:      | applicationName                       | codeLanguage                 |      | python-fastapi-cr-semver-hub-build    | python_fastapi_application   |      | terraform-inf-create-semver-hub-build | hcl_terraform_infrastructure |      | go-beego-create-semver-hub-build      | beego_application            |      | vue-lib-create-smv-hub-bld            | vue_library                  |      | rego-opa-lib-create-semver-hub-build  | opa_library                  |      | c-make-release-create-build           | c_none_make_application      |      | cpp-cmake-release-create-build        | cpp_none_cmake_application   |    @TektonGithub @TektonGithubCreate    Examples:      | applicationName                            | codeLanguage               |      | java8-mvn-create-semver-github-build       | java8_maven_application    |      | java11-mvn-create-semver-github-build      | java11_maven_application   |      | js-create-semver-github-build              | react_application          |      | js-crt-r-pnpm-smvr-gh-build                | react_pnpm_application     |      | python-3-8-create-semver-github-build      | python_3_8_application     |      | container-lib-create-semver-github-build   | docker_library             |      | dotnet-3-1-create-semver-github-build      | dotnet_3_1_application     |      | dotnet-3-1-lib-create-semver-github-build  | dotnet_3_1_library         |      | dotnet-6-0-create-semver-github-build      | dotnet_6_0_application     |      | dotnet-6-0-lib-create-semver-github-build  | dotnet_6_0_library         |      | go-operator-sdk-create-semver-github-build | operator_sdk_application   |      | go-gin-create-semver-github-build          | go_go_gin_application      |      | groovy-lib-create-semver-github-build      | codenarc_library           |      | pipeline-create-semver-github-build        | pipeline_library           |      | java8-grd-create-semver-github-build       | java8_gradle_application   |      | java8-mvn-lib-create-semver-github-build   | java8_maven_library        |      | java8-grd-lib-create-semver-github-build   | java8_gradle_library       |      | java11-grd-create-semver-github-build      | java11_gradle_application  |      | java11-mvn-lib-create-semver-github-build  | java11_maven_library       |      | java11-grd-lib-create-semver-github-build  | java11_gradle_library      |      | java17-mvn-create-semver-github-build      | java17_maven_application   |      | java17-grd-create-semver-github-build      | java17_gradle_application  |      | java17-mvn-lib-create-semver-github-build  | java17_maven_library       |      | java17-grd-lib-create-semver-github-build  | java17_gradle_library      |      | java21-mvn-create-semver-github-build      | java21_maven_application   |      | java21-grd-create-semver-github-build      | java21_gradle_application  |      | java21-mvn-lib-create-semver-github-build  | java21_maven_library       |      | java21-grd-lib-create-semver-github-build  | java21_gradle_library      |      | js-lib-create-semver-github-build          | react_library              |      | angular-create-semver-github-build         | angular_application        |      | angular-lib-create-semver-github-build     | angular_library            |      | express-create-semver-github-build         | express_application        |      | express-lib-create-semver-github-build     | express_library            |      | vue-create-semver-github-build             | vue_application            |      | next-create-semver-github-build            | next_application           |      | antora-create-semver-github-build          | antora_application         |      | js-expr-pnpm-crt-smvr-gh-build             | express_pnpm_application   |      | js-ant-pnpm-crt-smvr-gh-build              | angular_pnpm_application   |      | js-vue-pnpm-crt-smvr-gh-build              | vue_pnpm_application       |      | js-next-pnpm-crt-smvr-gh-build             | next_pnpm_application      |      | js-ant-pnpm-imp-smvr-gh-build              | antora_pnpm_application    |      | js-r-pnpm-lib-crt-smvr-gh-build            | react_pnpm_library         |      | js-ang-pnpm-lib-crt-smvr-gh-build          | angular_pnpm_library       |      | js-expr-pnpm-lib-crt-smvr-gh-build         | express_pnpm_library       |      | python-3-8-lib-create-semver-github-build  | python_3_8_library         |      | python-flask-create-semver-github-build    | python_flask_application   |      | terraform-lib-create-semver-github-build   | hcl_terraform_library      |      | charts-lib-create-semver-github-build      | charts_library             |      | python-ans-lib-create-semver-github-build  | python_3_8_ansible_library |  Scenario Outline: Check pipelines for <codeLanguage> added with semver version using github import strategy    When User deletes <applicationName> Sonar project if present    Given User generates "<codeLanguage>" github project with "<applicationName>" project name    And User imports semver codebase from github      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | <startFrom>       |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver         |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates pull request to "<defaultBranchName>" target branch in github "<applicationName>" project    Then User checks review pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    And User merges pull request in github "<applicationName>" project    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    And User deletes "<applicationName>" codebase resources    And User deletes "<applicationName>" github project    @TektonGithub @TektonGithubShortRegression    Examples:      | applicationName                  | codeLanguage      | defaultBranchName | startFrom      |      | go-beego-import-semver-hub-build | beego_application | master            | 1.2.3-SNAPSHOT |  Scenario Outline: Check pipelines for new branch of <codeLanguage> added with default version using github import strategy    When User deletes <applicationName> Sonar project if present    Given User generates "<codeLanguage>" github project with "<applicationName>" project name    And User imports default codebase from github      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    When User creates new branch      | applicationName | <applicationName> |      | branchName      | <newBranchName>   |    And User triggers build pipeline type for <newBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    When User creates pull request to "<newBranchName>" target branch in github "<applicationName>" project    Then User checks review pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    And User merges pull request in github "<applicationName>" project    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    And User deletes "<applicationName>" codebase resources    And User deletes "<applicationName>" github project    @TektonGithub @TektonGithubShortRegression    Examples:      | applicationName                      | codeLanguage       | newBranchName |      | dotnet31-lib-br-import-def-hub-build | dotnet_3_1_library | new           |  Scenario Outline: Check pipelines for release branch of <codeLanguage> added with semver version using github import strategy    When User deletes <applicationName> Sonar project if present    Given User generates "<codeLanguage>" github project with "<applicationName>" project name    And User imports semver codebase from github      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | startFrom         | <startFrom>         |      | defaultBranchName | <defaultBranchName> |    When User creates new release branch      | applicationName  | <applicationName>  |      | branchName       | <newBranchName>    |      | newBranchVersion | <newBranchVersion> |    And User triggers build pipeline type for <newBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver         |    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    When User creates pull request to "<newBranchName>" target branch in github "<applicationName>" project    Then User checks review pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    And User merges pull request in github "<applicationName>" project    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    And User deletes "<applicationName>" codebase resources    And User deletes "<applicationName>" github project    @TektonGithub @TektonGithubShortRegression    Examples:      | applicationName                 | codeLanguage             | newBranchName | startFrom      | newBranchVersion | defaultBranchName |      | java11-mvn-rel-import-hub-build | java11_maven_application | release-1.2   | 1.2.3-SNAPSHOT | 1.2.3-RC         | master            |      | java21-mvn-rel-import-hub-build | java21_maven_application | release-1.2   | 1.2.3-SNAPSHOT | 1.2.3-RC         | main              |  Scenario Outline: Check pipelines for <codeLanguage> added with semver version using clone strategy    When User deletes <applicationName> Sonar project if present    Given User clones semver codebase on github      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | 1.2.3-SNAPSHOT    |    When User creates new branch      | applicationName  | <applicationName>  |      | branchName       | new                |      | newBranchVersion | 1.2.3-NEW-SNAPSHOT |    And User triggers build pipeline type for new branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver         |    Then User checks build pipeline status for "new" branch in "<applicationName>" codebase    When User creates pull request to "new" target branch in github "<applicationName>" project    Then User checks review pipeline status for "new" branch in "<applicationName>" codebase    And User merges pull request in github "<applicationName>" project    Then User checks build pipeline status for "new" branch in "<applicationName>" codebase    And User deletes "<applicationName>" codebase resources    And User deletes "<applicationName>" github project    @TektonGithub @TektonGithubShortRegression    Examples:      | applicationName                     | codeLanguage           |      | dotnet-6-0-clone-hub-semver-build   | dotnet_6_0_application |      | java8-gr-lib-clone-hub-semver-build | java8_gradle_library   |      | express-clone-github-semver-build   | express_application    |      | go-beego-clone-github-semver-build  | beego_application      |      | charts-lib-clone-hub-semver-build   | charts_library         |    @TektonGithub @TektonGithubClone    Examples:      | applicationName                           | codeLanguage                 |      | dotnet-3-1-lib-clone-github-semver-build  | dotnet_3_1_library           |      | java8-mvn-clone-github-semver-build       | java8_maven_application      |      | js-clone-github-semver-build              | react_application            |      | js-r-pnpm-cln-gh-smvr-build               | react_pnpm_application       |      | python-3-8-lib-clone-github-semver-build  | python_3_8_library           |      | container-lib-clone-github-semver-build   | docker_library               |      | dotnet-3-1-clone-github-semver-build      | dotnet_3_1_application       |      | dotnet-6-0-lib-clone-github-semver-build  | dotnet_6_0_library           |      | go-operator-sdk-clone-github-semver-build | operator_sdk_application     |      | go-gin-clone-github-semver-build          | go_go_gin_application        |      | groovy-lib-clone-github-semver-build      | codenarc_library             |      | pipeline-clone-github-semver-build        | pipeline_library             |      | java8-grd-clone-github-semver-build       | java8_gradle_application     |      | java8-mvn-lib-clone-github-semver-build   | java8_maven_library          |      | java11-mvn-clone-github-semver-build      | java11_maven_application     |      | java11-grd-clone-github-semver-build      | java11_gradle_application    |      | java11-mvn-lib-clone-github-semver-build  | java11_maven_library         |      | java11-grd-lib-clone-github-semver-build  | java11_gradle_library        |      | java17-mvn-clone-github-semver-build      | java17_maven_application     |      | java17-grd-clone-github-semver-build      | java17_gradle_application    |      | java17-mvn-lib-clone-github-semver-build  | java17_maven_library         |      | java17-grd-lib-clone-github-semver-build  | java17_gradle_library        |      | java21-mvn-clone-github-semver-build      | java21_maven_application     |      | java21-grd-clone-github-semver-build      | java21_gradle_application    |      | java21-mvn-lib-clone-github-semver-build  | java21_maven_library         |      | java21-grd-lib-clone-github-semver-build  | java21_gradle_library        |      | js-lib-clone-github-semver-build          | react_library                |      | angular-clone-github-semver-build         | angular_application          |      | angular-lib-clone-github-semver-build     | angular_library              |      | express-lib-clone-github-semver-build     | express_library              |      | vue-clone-github-semver-build             | vue_application              |      | vue-lib-clone-github-semver-build         | vue_library                  |      | next-clone-github-semver-build            | next_application             |      | antora-clone-github-semver-build30        | antora_application           |      | js-ang-pnpm-cln-gh-smvr-build             | angular_pnpm_application     |      | js-vue-pnpm-cln-gh-smvr-build             | vue_pnpm_application         |      | js-next-pnpm-cln-gh-smvr-build            | next_pnpm_application        |      | js-ant-pnpm-cln-smvr-gh-build             | antora_pnpm_application      |      | js-r-pnpm-lib-cln-smvr-gh-build           | react_pnpm_library           |      | js-ang-pnpm-lib-cln-gh-smvr-build         | angular_pnpm_library         |      | js-expr-pnpm-lib-cln-gh-smvr-build        | express_pnpm_library         |      | js-vue-pnpm-lib-cln-gh-smvr-build         | vue_pnpm_library             |      | python-3-8-clone-github-semver-build      | python_3_8_application       |      | python-fastapi-clone-github-semver-build  | python_fastapi_application   |      | python-flask-clone-github-semver-build    | python_flask_application     |      | rego-opa-lib-clone-github-semver-build    | opa_library                  |      | terraform-lib-clone-github-semver-build   | hcl_terraform_library        |      | java11-multimodule-clone-semver-build     | java11_multimodule_tekton    |      | terraform-inf-clone-github-semver-build   | hcl_terraform_infrastructure |      | java8-mvn-auto-clone-github-semver-build  | java8_maven_autotest         |      | java11-grd-auto-clone-github-semver-build | java11_gradle_autotest       |      | java17-mvn-auto-clone-github-semver-build | java17_maven_autotest        |      | java21-mvn-auto-clone-github-semver-build | java21_maven_autotest        |  Scenario Outline: Check empty project codebase creation for <codeLanguage> added with semver version    Given User creates semver codebase on github      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | 1.2.3-SNAPSHOT    |      | isProjectEmpty  | true              |    And User deletes "<applicationName>" codebase resources    @TektonGithub @TektonCreate @TektonEmptyProject    Examples:      | applicationName                    | codeLanguage               |      | go-gin-create-semver-empty         | go_go_gin_application      |      | groovy-lib-create-semver-empty     | codenarc_library           |      | pipeline-create-semver-empty       | pipeline_library           |      | java17-mvn-create-semver-empty     | java17_maven_application   |      | java17-grd-create-semver-empty     | java17_gradle_application  |      | java17-mvn-lib-create-semver-empty | java17_maven_library       |      | java17-grd-lib-create-semver-empty | java17_gradle_library      |      | java21-mvn-create-semver-empty     | java21_maven_application   |      | java21-grd-create-semver-empty     | java21_gradle_application  |      | java21-mvn-lib-create-semver-empty | java21_maven_library       |      | java21-grd-lib-create-semver-empty | java21_gradle_library      |      | vue-create-semver-empty            | vue_application            |      | js-vue-pnpm-crt-gh-smvr-build      | vue_pnpm_application       |      | vue-lib-create-semver-empty        | vue_library                |      | js-vue-pnpm-lib-crt-smvr-empty     | vue_pnpm_library           |      | next-create-semver-empty           | next_application           |      | js-next-pnpm-crt-smvr-empty        | next_pnpm_application      |      | python-fastapi-create-semver-empty | python_fastapi_application |      | python-flask-create-semver-empty   | python_flask_application   |      | rego-opa-lib-create-semver-empty   | opa_library                |  Scenario Outline: Check pipelines for gitops app using github    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver         |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates pull request to "<defaultBranchName>" target branch in github "<applicationName>" project    Then User checks review pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    And User merges pull request in github "<applicationName>" project    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    @TektonGithub @TektonGithubShortRegression    Examples:      | applicationName | codeLanguage       | defaultBranchName |      | krci-gitops     | gitops_application | main              |  Scenario Outline: Check run autotest pipelines for <codeLanguage> added with default version using github clone strategy    When User deletes <applicationName> Sonar project if present    And User clones default codebase on github      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | 0.1.0-SNAPSHOT    |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    Then User save image path into test cache for build pipeline type for "<defaultBranchName>" branch in "<applicationName>" codebase    And User triggers the autotest pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |      | baseImage      | <baseImage>    |    Then User checks short tests pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    And User deletes "<applicationName>" codebase resources    @TektonGithub @TektonGithubShortRegression    Examples:      | applicationName    | codeLanguage           | defaultBranchName | baseImage                        |      | java17-mvn-auto-gh | java17_maven_autotest  | master            | epamedp/maven-java17-make:0.1.1  |      | java21-grd-auto-gh | java21_gradle_autotest | master            | epamedp/gradle-java21-make:0.1.1 |    @TektonGithub    Examples:      | applicationName    | codeLanguage           | defaultBranchName | baseImage                        |      | java8-mvn-auto-gh  | java8_maven_autotest   | master            | epamedp/maven-java8-make:0.1.1   |      | java11-mvn-auto-gh | java11_maven_autotest  | master            | epamedp/maven-java11-make:0.1.1  |      | java21-mvn-auto-gh | java21_maven_autotest  | master            | epamedp/maven-java21-make:0.1.3  |      | java8-grd-auto-gh  | java8_gradle_autotest  | master            | epamedp/gradle-java8-make:0.1.2  |      | java11-grd-auto-gh | java11_gradle_autotest | master            | epamedp/gradle-java11-make:0.1.1 |      | java17-grd-auto-gh | java17_gradle_autotest | master            | epamedp/gradle-java17-make:0.1.1 |