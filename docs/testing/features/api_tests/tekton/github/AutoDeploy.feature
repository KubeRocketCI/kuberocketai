Feature: Auto Deploy  Scenario Outline: Check auto deploy with promote using deploy trigger template    When User deletes <applicationName> Sonar project if present    Given User creates semver codebase on github      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | <startFrom>       |    When User creates new release branch      | applicationName  | <applicationName>  |      | branchName       | <newBranchName>    |      | newBranchVersion | <newBranchVersion> |    And User creates cd pipeline <pipelineName> with deployment type container      | applicationName   | <applicationName> |      | branchName        | <newBranchName>   |      | promoteInPipeline | True              |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Auto              |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |    And User triggers build pipeline type for <newBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver            |    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    When User saves the image version in memory as IMAGE_VERSION for <applicationName> application    Then User checks deploy pipeline and application status for <applicationName> application in <stageName> stage <pipelineName> pipeline    And User checks deployed <applicationName> application in the default namespace for <stageName> stage in <pipelineName> pipeline    And User checks IMAGE_VERSION promoted image for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted    @TektonGithub @TektonGithubRelease @TektonGithubAutoDeploy @TektonGithubShortRegression    Examples:      | applicationName | codeLanguage               | newBranchName | startFrom      | newBranchVersion | pipelineName | stageName |      | fastapi-auto-dp | python_fastapi_application | release-2.3   | 2.3.1-SNAPSHOT | 2.3.1-RC         | fastapi-auto | sit       |  Scenario Outline: Check auto deploy in custom namespace with promote using deploy-with-autotest trigger template    When User deletes <applicationName> Sonar project if present    Given User creates semver codebase on github      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | 8.3.1-SNAPSHOT    |    When User creates new branch      | applicationName  | <applicationName>  |      | branchName       | <newBranchName>    |      | newBranchVersion | <newBranchVersion> |    And User creates cd pipeline <pipelineName> with deployment type container      | applicationName   | <applicationName> |      | branchName        | <newBranchName>   |      | promoteInPipeline | True              |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName     | <applicationName>     |      | triggerType         | Auto                  |      | jobProvisioning     | default               |      | source              | default               |      | qualityGateType     | manual                |      | stepName            | manual                |      | triggerTemplate     | deploy-with-autotests |      | customNamespaceName | <customNamespaceName> |    And User triggers build pipeline type for <newBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver            |    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    When User saves the image version in memory as IMAGE_VERSION for <applicationName> application    Then User checks deploy-with-autotests pipeline and application status for <applicationName> application in <stageName> stage <pipelineName> pipeline    And User checks deployed <applicationName> application in <customNamespaceName> namespace    And User checks IMAGE_VERSION promoted image for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks namespace with <customNamespaceName> namespace is deleted    @TektonGithub @TektonGithubRelease @TektonGithubAutoDeploy @TektonGithubShortRegression    Examples:      | applicationName   | codeLanguage            | pipelineName      | stageName | newBranchName | newBranchVersion | customNamespaceName        |      | java8-mvn-auto-cn | java8_maven_application | java8-mvn-auto-cn | sit       | new           | 8.4.1-NEW        | java8-mvn-custom-namespace |  Scenario Outline: Check auto deploy without promote using deploy trigger template    When User deletes <applicationName> Sonar project if present    Given User creates default codebase on github      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | isPrivate       | true              |    And User creates cd pipeline <pipelineName> with deployment type container      | applicationName | <applicationName>   |      | branchName      | <defaultBranchName> |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Auto              |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User saves the image version in memory as IMAGE_VERSION for <applicationName> application    Then User checks deploy pipeline and application status for <applicationName> application in <stageName> stage <pipelineName> pipeline    And User checks deployed <applicationName> application in the default namespace for <stageName> stage in <pipelineName> pipeline    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User deletes "<applicationName>" github project    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted    @TektonGithub @TektonGithubRelease @TektonGithubAutoDeploy @TektonGithubShortRegression    Examples:      | applicationName | codeLanguage          | pipelineName | stageName | defaultBranchName |      | gin-au-dp       | go_go_gin_application | gin-au-dp    | sit       | master            |