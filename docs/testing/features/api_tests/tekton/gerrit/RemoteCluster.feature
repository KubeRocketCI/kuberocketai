Feature: Deploy in remote cluster  Scenario Outline: Check deploy in remote cluster without promote using deploy trigger template OKD    Given User creates default codebase on gerrit      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName | <applicationName>   |      | branchName      | <defaultBranchName> |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Manual            |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |      | clusterName     | okd               |    And User deploys application using deploy pipeline      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |      | clusterName     | okd               |    And User checks deployed <applicationName> application in the default namespace of OKD cluster for <stageName> stage in <pipelineName> pipeline    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted on OKD cluster    @TektonGerritRemoteOKDClusterDeploy    Examples:      | applicationName   | codeLanguage              | defaultBranchName | pipelineName   | stageName |      | java11-grd-remote | java11_gradle_application | master            | java11-grd-rem | sit       |  Scenario Outline: Check deploy in the custom namespace of remote cluster using deploy-with-autotests trigger template OKD    Given User clones semver codebase on gerrit      | applicationName | <autotestName>         |      | codeLanguage    | <autotestCodeLanguage> |      | startFrom       | 1.2.3-SNAPSHOT         |    And User creates semver codebase on gerrit      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | 1.2.3-SNAPSHOT    |    When User creates new release branch      | applicationName  | <applicationName>  |      | branchName       | <newBranchName>    |      | newBranchVersion | <newBranchVersion> |    And User triggers build pipeline type for <newBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver            |    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName   | <applicationName> |      | branchName        | <newBranchName>   |      | promoteInPipeline | True              |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName     | <applicationName>     |      | triggerType         | Manual                |      | jobProvisioning     | default               |      | source              | default               |      | qualityGateType     | autotests             |      | stepName            | auto-test             |      | autotestName        | <autotestName>        |      | branchName          | master                |      | triggerTemplate     | deploy-with-autotests |      | clusterName         | okd                   |      | customNamespaceName | <customNamespaceName> |    And User deploys application using deploy-with-autotests pipeline      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |      | clusterName     | okd               |    And User checks autotests-gradle autotest pipeline status for "<stageName>" stage in "<pipelineName>" pipeline    And User checks deployed <applicationName> application in <customNamespaceName> namespace on OKD cluster    And User checks IMAGE_VERSION promoted image for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User deletes "<autotestName>" codebase resources    And User checks namespace with <customNamespaceName> namespace is deleted on OKD cluster    @TektonGerritRemoteOKDClusterDeploy    Examples:      | applicationName | codeLanguage    | newBranchName | newBranchVersion | pipelineName | stageName | autotestName          | autotestCodeLanguage   | customNamespaceName  |      | vue-js-remote   | vue_application | release-1.2   | 1.2.3-RC         | vue-remote   | sit       | java11-grd-aut-remote | java11_gradle_autotest | vue-custom-ns-remote |  Scenario Outline: Check auto deploy with promote using deploy trigger template in remote cluster OKD    Given User creates semver codebase on gerrit      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | <startFrom>       |    When User creates new release branch      | applicationName  | <applicationName>  |      | branchName       | <newBranchName>    |      | newBranchVersion | <newBranchVersion> |    And User creates cd pipeline <pipelineName> with deployment type container      | applicationName   | <applicationName> |      | branchName        | <newBranchName>   |      | promoteInPipeline | True              |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Auto              |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |      | clusterName     | okd               |    And User triggers build pipeline type for <newBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver            |    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    When User saves the image version in memory as IMAGE_VERSION for <applicationName> application    Then User checks deploy pipeline and application status for <applicationName> application in <stageName> stage <pipelineName> pipeline    And User checks deployed <applicationName> application in the default namespace of OKD cluster for <stageName> stage in <pipelineName> pipeline    And User checks IMAGE_VERSION promoted image for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted on OKD cluster    @TektonGerritRemoteOKDClusterDeploy    Examples:      | applicationName | codeLanguage           | newBranchName | startFrom      | newBranchVersion | pipelineName    | stageName |      | dotnet6-aut-rmt | dotnet_6_0_application | release-2.3   | 2.3.1-SNAPSHOT | 2.3.1-RC         | dotnet6-aut-rmt | sit       |  Scenario Outline: Check deploy using custom values file with custom namespace in remote cluster OKD    Given Used adds custom values file to the GitOps repository with parameters gerrit project      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |      | content         | replicaCount: 2   |    When User creates default codebase on gerrit      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName | <applicationName>   |      | branchName      | <defaultBranchName> |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName     | <applicationName>     |      | triggerType         | Manual                |      | jobProvisioning     | default               |      | source              | default               |      | qualityGateType     | manual                |      | stepName            | manual                |      | customNamespaceName | <customNamespaceName> |      | clusterName         | okd                   |    And User deploys application using deploy pipeline      | applicationName     | <applicationName> |      | pipelineName        | <pipelineName>    |      | stageName           | <stageName>       |      | useCustomValuesFile | true              |      | clusterName         | okd               |    And User checks deployed <applicationName> application in <customNamespaceName> namespace with 2 replicas on OKD cluster    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks namespace with <customNamespaceName> namespace is deleted on OKD cluster    @TektonGerritRemoteOKDClusterDeploy    Examples:      | applicationName | codeLanguage        | pipelineName    | stageName | defaultBranchName | customNamespaceName      |      | express-ops-rmt | express_application | express-ops-rmt | sit       | master            | express-custom-ns-remote |  Scenario Outline: Check deploy in remote cluster without promote using deploy trigger template vCluster    Given User creates default codebase on gerrit      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName | <applicationName>   |      | branchName      | <defaultBranchName> |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Manual            |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |      | clusterName     | vcluster          |    And User deploys application using deploy pipeline      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |      | clusterName     | vcluster          |#    And User checks deployed <applicationName> application in the default namespace of OKD cluster for <stageName> stage in <pipelineName> pipeline    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources#    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted on OKD cluster    @TektonGerritRemoteVClusterDeploy @GerritRemoteVCluster    Examples:      | applicationName     | codeLanguage              | defaultBranchName | pipelineName   | stageName |      | java11-grd-vcluster | java11_gradle_application | master            | java11-grd-vcl | sit       |      | java17-grd-vcluster | java17_gradle_application | master            | java17-grd-vcl | sit       |  Scenario Outline: Check deploy in the custom namespace of remote cluster using deploy-with-autotests trigger template vCluster    Given User clones semver codebase on gerrit      | applicationName | <autotestName>         |      | codeLanguage    | <autotestCodeLanguage> |      | startFrom       | 1.2.3-SNAPSHOT         |    And User creates semver codebase on gerrit      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | 1.2.3-SNAPSHOT    |    When User creates new release branch      | applicationName  | <applicationName>  |      | branchName       | <newBranchName>    |      | newBranchVersion | <newBranchVersion> |    And User triggers build pipeline type for <newBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver            |    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName   | <applicationName> |      | branchName        | <newBranchName>   |      | promoteInPipeline | True              |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName     | <applicationName>     |      | triggerType         | Manual                |      | jobProvisioning     | default               |      | source              | default               |      | qualityGateType     | autotests             |      | stepName            | auto-test             |      | autotestName        | <autotestName>        |      | branchName          | master                |      | triggerTemplate     | deploy-with-autotests |      | clusterName         | vcluster              |      | customNamespaceName | <customNamespaceName> |    And User deploys application using deploy-with-autotests pipeline      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |      | clusterName     | vcluster          |    And User checks autotests-gradle autotest pipeline status for "<stageName>" stage in "<pipelineName>" pipeline#    And User checks deployed <applicationName> application in <customNamespaceName> namespace on OKD cluster    And User checks IMAGE_VERSION promoted image for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User deletes "<autotestName>" codebase resources#    And User checks namespace with <customNamespaceName> namespace is deleted on OKD cluster    @TektonGerritRemoteVClusterDeploy @GerritRemoteVCluster    Examples:      | applicationName | codeLanguage    | newBranchName | newBranchVersion | pipelineName | stageName | autotestName            | autotestCodeLanguage   | customNamespaceName    |      | vue-js-vcluster | vue_application | release-1.2   | 1.2.3-RC         | vue-vcluster | sit       | java11-grd-aut-vcluster | java11_gradle_autotest | vue-custom-ns-vcluster |  Scenario Outline: Check auto deploy with promote using deploy trigger template in remote cluster vCluster    Given User creates semver codebase on gerrit      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | <startFrom>       |    When User creates new release branch      | applicationName  | <applicationName>  |      | branchName       | <newBranchName>    |      | newBranchVersion | <newBranchVersion> |    And User creates cd pipeline <pipelineName> with deployment type container      | applicationName   | <applicationName> |      | branchName        | <newBranchName>   |      | promoteInPipeline | True              |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Auto              |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |      | clusterName     | vcluster          |    And User triggers build pipeline type for <newBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver            |    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    When User saves the image version in memory as IMAGE_VERSION for <applicationName> application    Then User checks deploy pipeline and application status for <applicationName> application in <stageName> stage <pipelineName> pipeline#    And User checks deployed <applicationName> application in the default namespace of OKD cluster for <stageName> stage in <pipelineName> pipeline    And User checks IMAGE_VERSION promoted image for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources#    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted on OKD cluster    @TektonGerritRemoteVClusterDeploy @GerritRemoteVCluster    Examples:      | applicationName | codeLanguage           | newBranchName | startFrom      | newBranchVersion | pipelineName    | stageName |      | dotnet6-aut-vcl | dotnet_6_0_application | release-2.3   | 2.3.1-SNAPSHOT | 2.3.1-RC         | dotnet6-aut-vcl | sit       |  Scenario Outline: Check deploy using custom values file with custom namespace in remote cluster vCluster    Given Used adds custom values file to the GitOps repository with parameters gerrit project      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |      | content         | replicaCount: 2   |    When User creates default codebase on gerrit      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName | <applicationName>   |      | branchName      | <defaultBranchName> |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName     | <applicationName>     |      | triggerType         | Manual                |      | jobProvisioning     | default               |      | source              | default               |      | qualityGateType     | manual                |      | stepName            | manual                |      | customNamespaceName | <customNamespaceName> |      | clusterName         | vcluster              |    And User deploys application using deploy pipeline      | applicationName     | <applicationName> |      | pipelineName        | <pipelineName>    |      | stageName           | <stageName>       |      | useCustomValuesFile | true              |      | clusterName         | vcluster          |#    And User checks deployed <applicationName> application in <customNamespaceName> namespace with 2 replicas on OKD cluster    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources#    And User checks namespace with <customNamespaceName> namespace is deleted on OKD cluster    @TektonGerritRemoteVClusterDeploy @GerritRemoteVCluster    Examples:      | applicationName | codeLanguage        | pipelineName    | stageName | defaultBranchName | customNamespaceName        |      | express-ops-vcl | express_application | express-ops-vcl | sit       | master            | express-custom-ns-vcluster |