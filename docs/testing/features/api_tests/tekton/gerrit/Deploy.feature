Feature: Deploy  Scenario Outline: Check pipelines for release branch of <codeLanguage> and deploy with semver version using create strategy    Given User creates semver codebase on gerrit      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | <startFrom>       |      | isPrivate       | true              |    When User creates new release branch      | applicationName  | <applicationName>  |      | branchName       | <newBranchName>    |      | newBranchVersion | <newBranchVersion> |    And User triggers build pipeline type for <newBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver         |    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName   | <applicationName> |      | branchName        | <newBranchName>   |      | promoteInPipeline | True              |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Manual            |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |    And User deploys application using deploy pipeline      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |    And User checks deployed <applicationName> application in the default namespace for <stageName> stage in <pipelineName> pipeline    And User checks IMAGE_VERSION promoted image for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted    @TektonGerrit @TektonGerritRelease @TektonGerritDeploy @TektonSmoke @TektonGerritShortRegression    Examples:      | applicationName      | codeLanguage              | newBranchName | startFrom      | newBranchVersion | pipelineName | stageName |      | java17-gr-semver-dep | java17_gradle_application | release-1.2   | 1.2.3-SNAPSHOT | 1.2.3-RC         | java17-gr-dp | sit       |  Scenario Outline: Check pipelines for <codeLanguage> and deploy with default version using clone strategy    When User deletes <applicationName> Sonar project if present    Given User clones default codebase on gerrit      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    When User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName | <applicationName>   |      | branchName      | <defaultBranchName> |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Manual            |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |    And User deploys application using deploy pipeline      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |    And User checks deployed <applicationName> application in the default namespace for <stageName> stage in <pipelineName> pipeline    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted    @TektonGerrit @TektonGerritRelease @TektonClone @TektonGerritDeploy @TektonGerritShortRegression    Examples:      | applicationName       | codeLanguage        | pipelineName | stageName | defaultBranchName |      | angular-clone-def-dep | angular_application | angular-dp   | sit       | master            |  Scenario Outline: Check deploy <codeLanguage> application in custom namespace with default version using create strategy    When User deletes <applicationName> Sonar project if present    Given User creates default codebase on gerrit      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    When User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName | <applicationName>   |      | branchName      | <defaultBranchName> |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName     | <applicationName>     |      | triggerType         | Manual                |      | jobProvisioning     | default               |      | source              | default               |      | qualityGateType     | manual                |      | stepName            | manual                |      | customNamespaceName | <customNamespaceName> |    And User deploys application using deploy pipeline      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |    And User checks deployed <applicationName> application in <customNamespaceName> namespace    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks namespace with <customNamespaceName> namespace is deleted    @TektonGerrit @TektonGerritDeploy @TektonGerritShortRegression    Examples:      | applicationName     | codeLanguage           | pipelineName   | stageName | defaultBranchName | customNamespaceName        |      | dotnet31-crt-dep-cn | dotnet_3_1_application | dotnet31-dp-cn | sit       | master            | dotnet-31-custom-namespace |  Scenario Outline: Check deploy <codeLanguage> application using custom values file in custom namespace with default version create strategy    When User deletes <applicationName> Sonar project if present    Given Used adds custom values file to the GitOps repository with parameters gerrit project      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |      | content         | replicaCount: 2   |    When User creates default codebase on gerrit      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName | <applicationName>   |      | branchName      | <defaultBranchName> |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName     | <applicationName>     |      | triggerType         | Manual                |      | jobProvisioning     | default               |      | source              | default               |      | qualityGateType     | manual                |      | stepName            | manual                |      | customNamespaceName | <customNamespaceName> |    And User deploys application using deploy pipeline      | applicationName     | <applicationName> |      | pipelineName        | <pipelineName>    |      | stageName           | <stageName>       |      | useCustomValuesFile | true              |    And User checks deployed <applicationName> application in <customNamespaceName> namespace with 2 replicas    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks namespace with <customNamespaceName> namespace is deleted    @TektonGerrit @TektonGerritDeploy @TektonGerritShortRegression    Examples:      | applicationName   | codeLanguage        | pipelineName   | stageName | defaultBranchName | customNamespaceName             |      | express-gitops-cn | express_application | expr-gitops-cn | sit       | master            | express-custom-namespace-gitops |  Scenario Outline: Check deploy <codeLanguage> application using custom values file with ingress default version create strategy    When User deletes <applicationName> Sonar project if present    Given Used adds custom values file to the GitOps repository with parameters gerrit project      | applicationName | <applicationName>         |      | pipelineName    | <pipelineName>            |      | stageName       | <stageName>               |      | content         | ingress:\n  enabled: true |    When User creates default codebase on gerrit      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName | <applicationName>   |      | branchName      | <defaultBranchName> |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Manual            |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |    And User deploys application using deploy pipeline      | applicationName     | <applicationName> |      | pipelineName        | <pipelineName>    |      | stageName           | <stageName>       |      | useCustomValuesFile | true              |    And User checks deployed <applicationName> application in the default namespace for <stageName> stage in <pipelineName> pipeline    And User checks create ingress in default namespace for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted    @TektonGerrit @TektonGerritDeploy @TektonGerritShortRegression    Examples:      | applicationName | codeLanguage        | pipelineName    | stageName | defaultBranchName |      | express-ingress | express_application | express-ingress | sit       | master            |