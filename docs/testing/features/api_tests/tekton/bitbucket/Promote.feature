Feature: Promote  Scenario Outline: Promote application with deploy-with-autotests pipeline using autotests    When User deletes <applicationName> Sonar project if present    Given User clones semver codebase on bitbucket      | applicationName | <autotestName>         |      | codeLanguage    | <autotestCodeLanguage> |      | startFrom       | 1.2.3-SNAPSHOT         |      | isPrivate       | true                   |    And User creates semver codebase on bitbucket      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | 1.2.3-SNAPSHOT    |    When User creates new release branch      | applicationName  | <applicationName>  |      | branchName       | <newBranchName>    |      | newBranchVersion | <newBranchVersion> |    And User triggers build pipeline type for <newBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver         |    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName   | <applicationName> |      | branchName        | <newBranchName>   |      | promoteInPipeline | True              |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName>     |      | triggerType     | Manual                |      | jobProvisioning | default               |      | source          | default               |      | qualityGateType | autotests             |      | stepName        | auto-test             |      | autotestName    | <autotestName>        |      | branchName      | master                |      | triggerTemplate | deploy-with-autotests |    And User deploys application using deploy-with-autotests pipeline      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |    And User checks autotests-gradle autotest pipeline status for "<stageName>" stage in "<pipelineName>" pipeline    And User checks deployed <applicationName> application in the default namespace for <stageName> stage in <pipelineName> pipeline    And User checks IMAGE_VERSION promoted image for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User deletes "<autotestName>" codebase resources    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted    @TektonBitbucket @TektonBitbucketRelease @TektonBitbucketPromote @TektonBitbucketShortRegression @TektonBitbucketDeployRegression    Examples:      | applicationName    | codeLanguage       | newBranchName | newBranchVersion | pipelineName   | stageName | autotestName        | autotestCodeLanguage  |      | antora-api-promote | antora_application | release-1.2   | 1.2.3-RC         | antora-api-prm | sit       | java8-grd-auto-test | java8_gradle_autotest |  Scenario Outline: Promote application with deploy-with-autotests pipeline without autotests    When User deletes <applicationName> Sonar project if present    Given User creates semver codebase on bitbucket      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | 1.2.3-SNAPSHOT    |    When User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver         |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName   | <applicationName>   |      | branchName        | <defaultBranchName> |      | promoteInPipeline | True                |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName>     |      | triggerType     | Manual                |      | jobProvisioning | default               |      | source          | default               |      | qualityGateType | manual                |      | stepName        | manual                |      | triggerTemplate | deploy-with-autotests |    And User deploys application using deploy-with-autotests pipeline      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |    And User checks deployed <applicationName> application in the default namespace for <stageName> stage in <pipelineName> pipeline    And User checks IMAGE_VERSION promoted image for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted    @TektonBitbucket @TektonBitbucketRelease @TektonBitbucketPromote @TektonBitbucketDeployRegression    Examples:      | applicationName     | codeLanguage           | defaultBranchName | pipelineName    | stageName |      | dotnet6-api-promote | dotnet_6_0_application | master            | dotnet6-api-prm | sit       |