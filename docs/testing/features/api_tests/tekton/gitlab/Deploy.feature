Feature: Deploy  Scenario Outline: Check pipelines for <codeLanguage> and deploy with semver version using create strategy    When User deletes <applicationName> Sonar project if present    Given User creates semver codebase on gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | <startFrom>       |    When User receive and save GitLab project ID for project <applicationName>    And User deletes "<applicationName>" codebase resources    And User imports semver codebase from gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | <startFrom>       |    When User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver         |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName | <applicationName>   |      | branchName      | <defaultBranchName> |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Manual            |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |    And User deploys application using deploy pipeline      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |    And User checks deployed <applicationName> application in the default namespace for <stageName> stage in <pipelineName> pipeline    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted    @TektonGitlab @TektonImport @TektonGitlabDeploy @TektonGitlabShortRegression    Examples:      | applicationName            | codeLanguage      | startFrom      | pipelineName | stageName | defaultBranchName |      | go-beego-import-semver-dep | beego_application | 1.2.3-SNAPSHOT | beego-dp     | sit       | master            |  Scenario Outline: Check pipelines for <codeLanguage> and deploy with default version using create strategy    When User deletes <applicationName> Sonar project if present    Given User creates default codebase on gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    When User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName | <applicationName>   |      | branchName      | <defaultBranchName> |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Manual            |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |    And User deploys application using deploy pipeline      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |    And User checks deployed <applicationName> application in the default namespace for <stageName> stage in <pipelineName> pipeline    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted    @TektonGitlab @TektonGitlabDeploy @TektonGitlabShortRegression    Examples:      | applicationName        | codeLanguage             | pipelineName  | stageName | defaultBranchName |      | java8-mvn-crt-def-dep  | java8_maven_application  | java8-mvn-dp  | sit       | master            |      | java21-mvn-crt-def-dep | java21_maven_application | java21-mvn-dp | sit       | master            |  Scenario Outline: Check deploy <codeLanguage> application in custom namespace with default version using clone strategy    When User deletes <applicationName> Sonar project if present    Given User clones default codebase on gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    When User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName | <applicationName>   |      | branchName      | <defaultBranchName> |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName     | <applicationName>     |      | triggerType         | Manual                |      | jobProvisioning     | default               |      | source              | default               |      | qualityGateType     | manual                |      | stepName            | manual                |      | customNamespaceName | <customNamespaceName> |    And User deploys application using deploy pipeline      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |    And User checks deployed <applicationName> application in <customNamespaceName> namespace    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks namespace with <customNamespaceName> namespace is deleted    @TektonGitlab @TektonClone @TektonGitlabDeploy @TektonGitlabShortRegression    Examples:      | applicationName        | codeLanguage               | pipelineName | stageName | defaultBranchName | customNamespaceName     |      | antora-clone-def-cn    | antora_application         | antora-dp-cn | sit       | master            | antora-custom-namespace |      | cpp-cmake-clone-def-cn | cpp_none_cmake_application | cpp-c-dep    | sit       | master            | cpp-custom-namespace    |  Scenario Outline: Check deploy <codeLanguage> application using custom values file with default version create strategy    When User deletes <applicationName> Sonar project if present    Given Used adds custom values file to the GitOps repository with parameters gitlab project      | applicationName | <applicationName> |      | pipelineName    | <pipelineName>    |      | stageName       | <stageName>       |      | content         | replicaCount: 2   |    When User creates default codebase on gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName   | <applicationName>   |      | branchName        | <defaultBranchName> |      | promoteInPipeline | True                |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Manual            |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |    And User deploys application using deploy pipeline      | applicationName     | <applicationName> |      | pipelineName        | <pipelineName>    |      | stageName           | <stageName>       |      | useCustomValuesFile | true              |    And User checks deployed <applicationName> application in the default namespace for <stageName> stage in <pipelineName> pipeline with 2 replicas    And User checks IMAGE_VERSION promoted image for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted    @TektonGitlab @TektonGitlabDeploy @TektonGitlabShortRegression    Examples:      | applicationName    | codeLanguage              | pipelineName  | stageName | defaultBranchName |      | sdk-crt-def-gitops | operator_sdk_application  | sdk-dp-gitops | sit       | master            |      | cpp-make-aut-prm   | cpp_none_make_application | c-auto-prm    | sit       | master            |  Scenario Outline: Check deploy <codeLanguage> application using custom values file with ingress default version create strategy    When User deletes <applicationName> Sonar project if present    Given Used adds custom values file to the GitOps repository with parameters gitlab project      | applicationName | <applicationName>         |      | pipelineName    | <pipelineName>            |      | stageName       | <stageName>               |      | content         | ingress:\n  enabled: true |    When User creates default codebase on gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates cd pipeline <pipelineName> with deployment type container      | applicationName | <applicationName>   |      | branchName      | <defaultBranchName> |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Manual            |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |    And User deploys application using deploy pipeline      | applicationName     | <applicationName> |      | pipelineName        | <pipelineName>    |      | stageName           | <stageName>       |      | useCustomValuesFile | true              |    And User checks deployed <applicationName> application in the default namespace for <stageName> stage in <pipelineName> pipeline    And User checks create ingress in default namespace for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted    @TektonGitlab @TektonGitlabDeploy @TektonGitlabShortRegression    Examples:      | applicationName | codeLanguage             | pipelineName | stageName | defaultBranchName |      | sdk-ingress     | operator_sdk_application | sdk-ingress  | sit       | master            |