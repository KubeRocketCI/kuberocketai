Feature: Tekton review and build pipeline with gitlab  Scenario Outline: Check pipelines for <codeLanguage> added with default version using gitlab import strategy    When User deletes <applicationName> Sonar project if present    Given User creates default codebase on gitlab      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |    When User receive and save GitLab project ID for project <applicationName>    And User deletes "<applicationName>" codebase resources    And User imports default codebase from gitlab      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates pull request from "<defaultBranchName>" ref branch to "<defaultBranchName>" target branch in gitlab    Then User checks review pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    And User merges pull request in Gitlab    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    And User deletes "<applicationName>" codebase resources    And User deletes gitlab fork project    @TektonGitlab @TektonGitlabSmoke    Examples:      | applicationName                 | codeLanguage             | defaultBranchName |      | java8-mvn-import-def-lab-build  | java8_maven_application  | master            |      | java11-mvn-import-def-lab-build | java11_maven_application | master            |      | js-import-def-gitlab-build      | react_application        | master            |      | python-3-8-import-def-lab-build | python_3_8_application   | master            |    @TektonGitlab @TektonGitlabShortRegression    Examples:      | applicationName              | codeLanguage             | defaultBranchName |      | dotnet-3-1-import-def-lab    | dotnet_3_1_application   | master            |      | go-oper-sdk-import-def-lab   | operator_sdk_application | master            |      | angular-lib-import-def-lab   | angular_library          | master            |      | java11-mvnauto-importdef-lab | java11_maven_autotest    | master            |    @TektonGitlab    Examples:      | applicationName                           | codeLanguage                 | defaultBranchName |      | container-lib-import-def-gitlab-build     | docker_library               | master            |      | dotnet-3-1-lib-import-def-gitlab-build    | dotnet_3_1_library           | master            |      | dotnet-6-0-import-def-gitlab-build        | dotnet_6_0_application       | master            |      | dotnet-6-0-lib-import-def-gitlab-build    | dotnet_6_0_library           | master            |      | go-beego-import-def-gitlab-build          | beego_application            | master            |      | go-gin-import-def-gitlab-build            | go_go_gin_application        | master            |      | groovy-lib-import-def-gitlab-build        | codenarc_library             | master            |      | pipeline-lib-import-def-gitlab-build      | pipeline_library             | master            |      | java8-grd-import-def-gitlab-build         | java8_gradle_application     | master            |      | java8-mvn-lib-import-def-gitlab-build     | java8_maven_library          | master            |      | java8-grd-lib-import-def-gitlab-build     | java8_gradle_library         | master            |      | java11-grd-import-def-gitlab-build        | java11_gradle_application    | master            |      | java11-mvn-lib-import-def-gitlab-build    | java11_maven_library         | master            |      | java11-grd-lib-import-def-gitlab-build    | java11_gradle_library        | master            |      | java17-mvn-import-def-gitlab-build        | java17_maven_application     | master            |      | java17-grd-import-def-gitlab-build        | java17_gradle_application    | master            |      | java17-mvn-lib-import-def-gitlab-build    | java17_maven_library         | master            |      | java17-grd-lib-import-def-gitlab-build    | java17_gradle_library        | master            |      | java21-mvn-import-def-gitlab-build        | java21_maven_application     | master            |      | java21-grd-import-def-gitlab-build        | java21_gradle_application    | master            |      | java21-mvn-lib-import-def-gitlab-build    | java21_maven_library         | master            |      | java21-grd-lib-import-def-gitlab-build    | java21_gradle_library        | master            |      | js-lib-import-def-gitlab-build            | react_library                | master            |      | angular-import-def-gitlab-build           | angular_application          | master            |      | express-import-def-gitlab-build           | express_application          | master            |      | express-lib-import-def-gitlab-build       | express_library              | master            |      | vue-import-def-gitlab-build               | vue_application              | master            |      | vue-lib-import-def-gitlab-build           | vue_library                  | master            |      | next-import-def-gitlab-build              | next_application             | master            |      | antora-import-def-gitlab-build            | antora_application           | main              |      | js-ang-pnpm-imp-def-gl-build              | angular_pnpm_application     | master            |      | js-expr-pnpm-imp-def-gl-build             | express_pnpm_application     | master            |      | js-vue-pnpm-imp-def-gl-build              | vue_pnpm_application         | master            |      | js-next-pnpm-imp-def-gl-build             | next_pnpm_application        | master            |      | js-ant-pnpm-imp-smvr-gh-build             | antora_pnpm_application      | master            |      | js-r-pnpm-lib-imp-def-gl-build            | react_pnpm_library           | master            |      | js-expr-pnpm-lib-imp-def-gl-build         | express_pnpm_library         | master            |      | js-vue-pnpm-lib-imp-def-gl-build          | vue_pnpm_library             | master            |      | python-3-8-lib-import-def-gitlab-build    | python_3_8_library           | master            |      | python-fastapi-import-def-gitlab-build    | python_fastapi_application   | master            |      | python-flask-import-def-gitlab-build      | python_flask_application     | master            |      | rego-opa-lib-import-def-gitlab-build      | opa_library                  | master            |      | terraform-lib-import-def-gitlab-build     | hcl_terraform_library        | master            |      | charts-lib-import-def-gitlab-build        | charts_library               | master            |      | terraform-inf-import-def-gitlab-build     | hcl_terraform_infrastructure | master            |      | java8-grd-auto-import-def-gitlab-build    | java8_gradle_autotest        | master            |      | java17-grd-auto-import-def-gitlab-build   | java17_gradle_autotest       | master            |      | java21-grd-auto-import-def-gitlab-build   | java21_gradle_autotest       | master            |      | java8-multimodule-import-def-build        | java8_multimodule_tekton     | master            |      | java21-multimodule-import-def-build       | java21_multimodule_tekton    | master            |      | python-ans-lib-create-semver-gitlab-build | python_3_8_ansible_library   | master            |  Scenario Outline: Check pipelines for <applicationName> added with default version using gitlab import strategy    When User deletes <applicationName> Sonar project if present    And User clones default codebase on gitlab      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |    When User receive and save GitLab project ID for project <applicationName>    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates pull request from "<defaultBranchName>" ref branch to "<defaultBranchName>" target branch in gitlab    Then User checks review pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    And User merges pull request in Gitlab    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase is failed on git-tag stage    And User deletes "<applicationName>" codebase resources    @TektonGitlab @TektonGitlabShortRegression    Examples:      | applicationName | codeLanguage     | defaultBranchName |      | postgresql      | helm_application | master            |  Scenario Outline: Check pipelines for release branch of <codeLanguage> added with semver version using gitlab create strategy    When User deletes <applicationName> Sonar project if present    Given User creates semver codebase on gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | 1.2.3-SNAPSHOT    |    When User creates new branch      | applicationName  | <applicationName>  |      | branchName       | new                |      | newBranchVersion | 1.2.3-NEW-SNAPSHOT |    When User creates new release branch      | applicationName  | <applicationName> |      | branchName       | release-1.2       |      | newBranchVersion | 1.2.3-RC          |    And User deletes "<applicationName>" codebase resources    @TektonGitlab @TektonGitlabCreate    Examples:      | applicationName                           | codeLanguage                 |      | java8-mvn-create-semver-gitlab-build      | java8_maven_application      |      | java11-mvn-create-semver-gitlab-build     | java11_maven_application     |      | js-create-semver-gitlab-build             | react_application            |      | js-r-pnpm-crt-smvr-gl-build               | react_pnpm_application       |      | python-3-8-create-semver-gitlab-build     | python_3_8_application       |      | container-lib-create-semver-lab-build     | docker_library               |      | dotnet-3-1-create-semver-gitlab-build     | dotnet_3_1_application       |      | dotnet-3-1-lib-create-semver-lab-build    | dotnet_3_1_library           |      | dotnet-60-create-semver-gitlab-build      | dotnet_6_0_application       |      | dotnet-60-lib-create-semver-lab-build     | dotnet_6_0_library           |      | go-beego-create-semver-gitlab-build       | beego_application            |      | go-operator-sdk-create-semver-lab-build   | operator_sdk_application     |      | go-gin-create-semver-gitlab-build         | go_go_gin_application        |      | groovy-lib-create-semver-gitlab-build     | codenarc_library             |      | pipeline-create-semver-gitlab-build       | pipeline_library             |      | java8-grd-create-semver-gitlab-build      | java8_gradle_application     |      | java8-mvn-lib-create-semver-gitlab-build  | java8_maven_library          |      | java8-grd-lib-create-semver-gitlab-build  | java8_gradle_library         |      | java11-grd-create-semver-gitlab-build     | java11_gradle_application    |      | java11-mvn-lib-create-semver-gitlab-build | java11_maven_library         |      | java11-grd-lib-create-semver-gitlab-build | java11_gradle_library        |      | java17-mvn-create-semver-gitlab-build     | java17_maven_application     |      | java17-grd-create-semver-gitlab-build     | java17_gradle_application    |      | java17-mvn-lib-create-semver-gitlab-build | java17_maven_library         |      | java17-grd-lib-create-semver-gitlab-build | java17_gradle_library        |      | java21-mvn-create-semver-gitlab-build     | java21_maven_application     |      | java21-grd-create-semver-gitlab-build     | java21_gradle_application    |      | java21-mvn-lib-create-semver-gitlab-build | java21_maven_library         |      | java21-grd-lib-create-semver-gitlab-build | java21_gradle_library        |      | js-lib-create-semver-gitlab-build         | react_library                |      | angular-create-semver-gitlab-bld          | angular_application          |      | angular-lib-create-semver-gitlab-bld      | angular_library              |      | express-create-semver-gitlab-bld          | express_application          |      | express-lib-create-semver-gitlab-bld      | express_library              |      | vue-create-semver-gitlab-bld              | vue_application              |      | vue-lib-create-semver-gitlab-bld          | vue_library                  |      | next-create-semver-gitlab-bld             | next_application             |      | antora-create-semver-gitlab-bld           | antora_application           |      | js-ang-pnpm-crt-sm-gl-bld                 | angular_pnpm_application     |      | js-expr-pnpm-crt-sm-gl-bld                | express_pnpm_application     |      | js-vue-pnpm-crt-sm-gl-bld                 | vue_pnpm_application         |      | js-next-pnpm-crt-sm-gl-bld                | next_pnpm_application        |      | js-ant-pnpm-crt-sm-gh-bld                 | antora_pnpm_application      |      | js-r-pnpm-lib-crt-sm-gl-bld               | react_pnpm_library           |      | js-ang-pnpm-lib-crt-sm-gl-bld             | angular_pnpm_library         |      | js-expr-pnpm-lib-crt-sm-gl-bld            | express_pnpm_library         |      | js-vue-pnpm-lib-crt-sm-gl-bld             | vue_pnpm_library             |      | python-3-8-lib-create-semver-gitlab-build | python_3_8_library           |      | python-fastapi-create-semver-gitlab-build | python_fastapi_application   |      | python-flask-create-semver-gitlab-build   | python_flask_application     |      | rego-opa-lib-create-semver-gitlab-build   | opa_library                  |      | terraform-lib-create-semver-gitlab-build  | hcl_terraform_library        |      | charts-lib-create-semver-gitlab-build     | charts_library               |      | terraform-inf-create-semver-gitlab-build  | hcl_terraform_infrastructure |  Scenario Outline: Check pipelines for <codeLanguage> added with semver version using gitlab import strategy    When User deletes <applicationName> Sonar project if present    Given User creates semver codebase on gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | <startFrom>       |    When User receive and save GitLab project ID for project <applicationName>    And User deletes "<applicationName>" codebase resources    And User imports semver codebase from gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | <startFrom>       |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver         |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates pull request from "<defaultBranchName>" ref branch to "<defaultBranchName>" target branch in gitlab    Then User checks review pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    And User merges pull request in Gitlab    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    And User deletes "<applicationName>" codebase resources    And User deletes gitlab fork project    @TektonGitlab    Examples:      | applicationName                          | codeLanguage | defaultBranchName | startFrom      |      | rego-opa-lib-import-semver-gitlab-review | opa_library  | master            | 1.2.3-SNAPSHOT |    @TektonGitlabShortRegression    Examples:      | applicationName                 | codeLanguage                 | defaultBranchName | startFrom      |      | vue-app-import-semver-gitlab    | vue_application              | master            | 1.2.3-SNAPSHOT |      | charts-lib-import-semver-gitlab | charts_library               | master            | 1.2.3-SNAPSHOT |      | dotnet-60-import-semver-gitlab  | dotnet_6_0_application       | master            | 1.2.3-SNAPSHOT |      | java17-grd-import-semver-lab    | java17_gradle_application    | master            | 1.2.3-SNAPSHOT |      | hcl-inf-import-semver-gitlab    | hcl_terraform_infrastructure | master            | 1.2.3-SNAPSHOT |  Scenario Outline: Check pipelines for new branch of <codeLanguage> added with default version using gitlab import strategy    When User deletes <applicationName> Sonar project if present    Given User creates default codebase on gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    When User receive and save GitLab project ID for project <applicationName>    And User deletes "<applicationName>" codebase resources    And User imports default codebase from gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    When User creates new release branch      | applicationName | <applicationName> |      | branchName      | <newBranchName>   |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User creates pull request from "<defaultBranchName>" ref branch to "<newBranchName>" target branch in gitlab    Then User checks review pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    And User merges pull request in Gitlab    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    And User deletes "<applicationName>" codebase resources    And User deletes gitlab fork project    @TektonGitlab @TektonGitlabShortRegression    Examples:      | applicationName             | codeLanguage       | newBranchName | defaultBranchName |      | python-38-lib-br-def-lab-rw | python_3_8_library | new           | master            |  Scenario Outline: Check pipelines for release branch of <codeLanguage> added with semver version using gitlab import strategy    When User deletes <applicationName> Sonar project if present    Given User creates semver codebase on gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | <startFrom>       |    When User receive and save GitLab project ID for project <applicationName>    And User deletes "<applicationName>" codebase resources    And User imports semver codebase from gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | <startFrom>       |    When User creates new release branch      | applicationName  | <applicationName>  |      | branchName       | <newBranchName>    |      | newBranchVersion | <newBranchVersion> |    And User triggers build pipeline type for <newBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver         |    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    When User creates pull request from "<defaultBranchName>" ref branch to "<newBranchName>" target branch in gitlab    Then User checks review pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    And User merges pull request in Gitlab    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    And User deletes "<applicationName>" codebase resources    And User deletes gitlab fork project    @TektonGitlab @TektonGitlabShortRegression @EPMDEDP-15655    Examples:      | applicationName             | codeLanguage              | newBranchName | defaultBranchName | startFrom      | newBranchVersion |      | js-rel-import-lab-review    | react_application         | release-1.2   | master            | 1.2.3-SNAPSHOT | 1.2.3-RC         |      | c-make-import-gitlab-review | c_none_make_application   | release-1.2   | master            | 1.2.3-SNAPSHOT | 1.2.3-RC         |      | cpp-make-import-lab-review  | cpp_none_make_application | release-1.2   | master            | 1.2.3-SNAPSHOT | 1.2.3-RC         |  Scenario Outline: Check pipelines for <codeLanguage> added with semver version using clone strategy    When User deletes <applicationName> Sonar project if present    Given User clones semver codebase on gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | 1.2.3-SNAPSHOT    |    When User creates new branch      | applicationName  | <applicationName>  |      | branchName       | new                |      | newBranchVersion | 1.2.3-NEW-SNAPSHOT |    When User creates new release branch      | applicationName  | <applicationName> |      | branchName       | release-1.2       |      | newBranchVersion | 1.2.3-RC          |    And User deletes "<applicationName>" codebase resources    @TektonGitlab @TektonGitlabClone    Examples:      | applicationName                           | codeLanguage                 |      | dotnet-3-1-lib-clone-gitlab-semver-build  | dotnet_3_1_library           |      | java8-mvn-clone-gitlab-semver-build       | java8_maven_application      |      | js-clone-gitlab-semver-build              | react_application            |      | js-r-pnpm-cln-gl-smvr-build               | react_pnpm_application       |      | python-3-8-lib-clone-gitlab-semver-build  | python_3_8_library           |      | container-lib-clone-gitlab-semver-build   | docker_library               |      | dotnet-3-1-clone-gitlab-semver-build      | dotnet_3_1_application       |      | dotnet-6-0-clone-gitlab-semver-build      | dotnet_6_0_application       |      | dotnet-6-0-lib-clone-gitlab-semver-build  | dotnet_6_0_library           |      | go-beego-clone-gitlab-semver-build        | beego_application            |      | go-operator-sdk-clone-gitlab-semver-build | operator_sdk_application     |      | go-gin-clone-gitlab-semver-build          | go_go_gin_application        |      | groovy-lib-clone-gitlab-semver-build      | codenarc_library             |      | pipeline-clone-gitlab-semver-build        | pipeline_library             |      | java8-grd-clone-gitlab-semver-build       | java8_gradle_application     |      | java8-gr-lib-clone-gitlab-semver-build    | java8_gradle_library         |      | java8-mvn-lib-clone-gitlab-semver-build   | java8_maven_library          |      | java11-mvn-clone-gitlab-semver-build      | java11_maven_application     |      | java11-grd-clone-gitlab-semver-build      | java11_gradle_application    |      | java11-mvn-lib-clone-gitlab-semver-build  | java11_maven_library         |      | java11-grd-lib-clone-gitlab-semver-build  | java11_gradle_library        |      | java17-mvn-clone-gitlab-semver-build      | java17_maven_application     |      | java17-grd-clone-gitlab-semver-build      | java17_gradle_application    |      | java17-mvn-lib-clone-gitlab-semver-build  | java17_maven_library         |      | java17-grd-lib-clone-gitlab-semver-build  | java17_gradle_library        |      | java21-mvn-clone-gitlab-semver-build      | java21_maven_application     |      | java21-grd-clone-gitlab-semver-build      | java21_gradle_application    |      | java21-mvn-lib-clone-gitlab-semver-build  | java21_maven_library         |      | java21-grd-lib-clone-gitlab-semver-build  | java21_gradle_library        |      | js-lib-clone-gitlab-semver-build          | react_library                |      | angular-clone-gitlab-semver-build         | angular_application          |      | angular-lib-clone-gitlab-semver-build     | angular_library              |      | express-clone-gitlab-semver-build         | express_application          |      | express-lib-clone-gitlab-semver-build     | express_library              |      | vue-clone-gitlab-semver-build             | vue_application              |      | vue-lib-clone-gitlab-semver-build         | vue_library                  |      | next-clone-gitlab-semver-build            | next_application             |      | antora-clone-gitlab-semver-build          | antora_application           |      | js-ang-pnpm-cln-smvr-gl-build             | angular_pnpm_application     |      | js-exp-pnpm-cln-smvr-gl-bld               | express_pnpm_application     |      | js-vue-pnpm-cln-smvr-gl-build             | vue_pnpm_application         |      | js-next-pnpm-cln-smvr-gl-build            | next_pnpm_application        |      | js-ant-pnpm-cln-smvr-gl-build             | antora_pnpm_application      |      | js-r-pnpm-lib-cln-gl-smvr-build           | react_pnpm_library           |      | js-ang-pnpm-lib-cln-gl-smvr-build         | angular_pnpm_library         |      | js-expr-pnpm-lib-cln-gl-smvr-build        | express_pnpm_library         |      | js-vue-pnpm-lib-cln-gl-smvr-build         | vue_pnpm_library             |      | python-3-8-clone-gitlab-semver-build      | python_3_8_application       |      | python-fastapi-clone-gitlab-semver-build  | python_fastapi_application   |      | python-flask-clone-gitlab-semver-build    | python_flask_application     |      | rego-opa-lib-clone-gitlab-semver-build    | opa_library                  |      | terraform-lib-clone-gitlab-semver-build   | hcl_terraform_library        |      | charts-lib-clone-gitlab-semver-build      | charts_library               |      | terraform-inf-clone-gitlab-semver-build   | hcl_terraform_infrastructure |      | java8-mvn-auto-clone-gitlab-semver-build  | java8_maven_autotest         |      | java11-grd-auto-clone-gitlab-semver-build | java11_gradle_autotest       |      | java17-mvn-auto-clone-gitlab-semver-build | java17_maven_autotest        |      | java21-mvn-auto-clone-gitlab-semver-build | java21_maven_autotest        |  Scenario Outline: Check empty project codebase creation for <codeLanguage> added with default version    Given User creates default codebase on gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | isProjectEmpty  | true              |    And User deletes "<applicationName>" codebase resources    @TektonGitlab @TektonCreate @TektonEmptyProject    Examples:      | applicationName                  | codeLanguage                 |      | dotnet-6-0-create-def-empty      | dotnet_6_0_application       |      | dotnet-6-0-lib-create-def-empty  | dotnet_6_0_library           |      | java11-mvn-create-def-empty      | java11_maven_application     |      | java11-grd-create-def-empty      | java11_gradle_application    |      | java11-mvn-lib-create-def-empty  | java11_maven_library         |      | java11-grd-lib-create-def-empty  | java11_gradle_library        |      | go-operator-sdk-create-def-empty | operator_sdk_application     |      | angular-create-def-empty         | angular_application          |      | js-ang-pnpm-crt-def-gl-build     | angular_pnpm_application     |      | angular-lib-create-def-empty     | angular_library              |      | js-ang-pnpm-lib-crt-def-empty    | angular_pnpm_library         |      | express-create-def-empty         | express_application          |      | js-expr-pnpm-crt-def-empty       | express_pnpm_application     |      | express-lib-create-def-empty     | express_library              |      | js-expr-pnpm-lib-crt-def-empty   | express_pnpm_library         |      | terraform-inf-create-def-empty   | hcl_terraform_infrastructure |      | charts-lib-create-def-empty      | charts_library               |  Scenario Outline: Check pipelines for gitops application on gitlab    Given User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver         |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    When User receive and save GitLab project ID for project <applicationName>    When User creates pull request from "<defaultBranchName>" ref branch to "<defaultBranchName>" target branch in gitlab    Then User checks review pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    And User merges pull request in Gitlab    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    @TektonGitlab @TektonGitlabShortRegression    Examples:      | applicationName | codeLanguage       | defaultBranchName |      | krci-gitops     | gitops_application | main              |  Scenario Outline: Check run autotest pipelines for <codeLanguage> added with default version using gitlab clone strategy    When User deletes <applicationName> Sonar project if present    And User clones default codebase on gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | 0.1.0-SNAPSHOT    |    And User triggers build pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |    Then User checks build pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    Then User save image path into test cache for build pipeline type for "<defaultBranchName>" branch in "<applicationName>" codebase    And User triggers the autotest pipeline type for <defaultBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | default        |      | baseImage      | <baseImage>    |    Then User checks short tests pipeline status for "<defaultBranchName>" branch in "<applicationName>" codebase    And User deletes "<applicationName>" codebase resources    @TektonGitlab @TektonGitlabShortRegression    Examples:      | applicationName    | codeLanguage           | defaultBranchName | baseImage                        |      | java17-mvn-auto-gl | java17_maven_autotest  | master            | epamedp/maven-java17-make:0.1.1  |      | java21-grd-auto-gl | java21_gradle_autotest | master            | epamedp/gradle-java21-make:0.1.1 |    @TektonGitlab    Examples:      | applicationName    | codeLanguage           | defaultBranchName | baseImage                        |      | java8-mvn-auto-gl  | java8_maven_autotest   | master            | epamedp/maven-java8-make:0.1.1   |      | java11-mvn-auto-gl | java11_maven_autotest  | master            | epamedp/maven-java11-make:0.1.1  |      | java21-mvn-auto-gl | java21_maven_autotest  | master            | epamedp/maven-java21-make:0.1.3  |      | java8-grd-auto-gl  | java8_gradle_autotest  | master            | epamedp/gradle-java8-make:0.1.2  |      | java11-grd-auto-gl | java11_gradle_autotest | master            | epamedp/gradle-java11-make:0.1.1 |      | java17-grd-auto-gl | java17_gradle_autotest | master            | epamedp/gradle-java17-make:0.1.1 |