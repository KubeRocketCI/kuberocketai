Feature: Auto Deploy with Promote  Scenario Outline: Check auto deploy in few stages without promote    When User deletes <applicationName> Sonar project if present    Given User creates semver codebase on gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | <startFrom>       |    When User creates new release branch      | applicationName  | <applicationName>  |      | branchName       | <newBranchName>    |      | newBranchVersion | <newBranchVersion> |    And User creates cd pipeline <pipelineName> with deployment type container      | applicationName | <applicationName> |      | branchName      | <newBranchName>   |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName     | <applicationName>     |      | triggerType         | Auto                  |      | jobProvisioning     | default               |      | source              | default               |      | qualityGateType     | manual                |      | stepName            | manual                |      | customNamespaceName | <customNamespaceName> |    And User creates stage <secondStage> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Auto              |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |    And User triggers build pipeline type for <newBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver            |    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    When User saves the image version in memory as IMAGE_VERSION for <applicationName> application    Then User checks deploy pipeline and application status for <applicationName> application in <stageName> stage <pipelineName> pipeline    And User checks deploy pipeline and application status for <applicationName> application in <secondStage> stage <pipelineName> pipeline    And User checks deployed <applicationName> application in <customNamespaceName> namespace    And User checks deployed <applicationName> application in the default namespace for <secondStage> stage in <pipelineName> pipeline    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User checks that IMAGE_VERSION image isn't promoted for <applicationName> application for <secondStage> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<secondStage> cd pipeline stage resources    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks namespace with <customNamespaceName> namespace is deleted    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted    @TektonGitlab @TektonGitlabAutoDeployWithPromote @TektonGitlabShortRegression    Examples:      | applicationName  | codeLanguage             | newBranchName | startFrom      | newBranchVersion | pipelineName   | stageName | secondStage | customNamespaceName             |      | java8-g-auto-prm | java8_gradle_application | release-2.3   | 2.3.1-SNAPSHOT | 2.3.1-RC         | java8-auto-prm | sit       | qa          | java8-custom-namespace-auto-prm |      | java21-g-auto-prm | java21_gradle_application | release-2.3   | 2.3.1-SNAPSHOT | 2.3.1-RC         | java21-auto-prm | sit       | qa          | java21-custom-namespace-auto-prm |  Scenario Outline: Check auto deploy in few stages with promote using autotests    When User deletes <applicationName> Sonar project if present    Given User clones semver codebase on gitlab      | applicationName | <autotestName>         |      | codeLanguage    | <autotestCodeLanguage> |      | startFrom       | 1.2.3-SNAPSHOT         |    When User creates semver codebase on gitlab      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |      | startFrom       | 8.3.1-SNAPSHOT    |    And User creates new branch      | applicationName  | <applicationName>  |      | branchName       | <newBranchName>    |      | newBranchVersion | <newBranchVersion> |    And User creates cd pipeline <pipelineName> with deployment type container      | applicationName   | <applicationName> |      | branchName        | <newBranchName>   |      | promoteInPipeline | True              |    And User creates stage <stageName> in cd pipeline <pipelineName>      | applicationName | <applicationName>     |      | triggerType     | Auto                  |      | jobProvisioning | default               |      | source          | default               |      | qualityGateType | autotests             |      | stepName        | auto-test             |      | autotestName    | <autotestName>        |      | branchName      | master                |      | triggerTemplate | deploy-with-autotests |    And User creates stage <secondStage> in cd pipeline <pipelineName>      | applicationName | <applicationName> |      | triggerType     | Auto              |      | jobProvisioning | default           |      | source          | default           |      | qualityGateType | manual            |      | stepName        | manual            |      | triggerTemplate | deploy            |    And User triggers build pipeline type for <newBranchName> branch in <applicationName> codebase      | codeLanguage   | <codeLanguage> |      | versioningType | semver            |    Then User checks build pipeline status for "<newBranchName>" branch in "<applicationName>" codebase    When User saves the image version in memory as IMAGE_VERSION for <applicationName> application    Then User checks autotests-maven autotest pipeline status for "<stageName>" stage in "<pipelineName>" pipeline    And User checks deploy-with-autotests pipeline and application status for <applicationName> application in <stageName> stage <pipelineName> pipeline    And User checks deployed <applicationName> application in the default namespace for <stageName> stage in <pipelineName> pipeline    And User checks IMAGE_VERSION promoted image for <applicationName> application for <stageName> stage <pipelineName> pipeline    And User checks deploy pipeline and application status for <applicationName> application in <secondStage> stage <pipelineName> pipeline    And User checks deployed <applicationName> application in the default namespace for <secondStage> stage in <pipelineName> pipeline    And User checks IMAGE_VERSION promoted image for <applicationName> application for <secondStage> stage <pipelineName> pipeline    And User deletes <pipelineName> application set    And User deletes <pipelineName>-<secondStage> cd pipeline stage resources    And User deletes <pipelineName>-<stageName> cd pipeline stage resources    And User deletes <pipelineName> cd pipeline resources    And User deletes "<applicationName>" codebase resources    And User checks default namespace for <stageName> stage in <pipelineName> pipeline is deleted    And User checks default namespace for <secondStage> stage in <pipelineName> pipeline is deleted    @TektonGitlab @TektonGitlabAutoDeployWithPromote @TektonGitlabShortRegression    Examples:      | applicationName | codeLanguage        | pipelineName     | stageName | secondStage | newBranchName | newBranchVersion | autotestName          | autotestCodeLanguage  |      | express-aut-prm | express_application | express-auto-prm | sit       | qa          | new           | 8.4.1-NEW        | java-17-mvn-auto-test | java17_maven_autotest |