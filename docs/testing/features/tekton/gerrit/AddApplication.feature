Feature: Applications provisioning using Create strategy on gerrit  Scenario Outline: Create application using Create strategy with Default versioning    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User creates codebase using default versioning type on gerrit      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    And User deletes application with name <applicationName>    And User deletes "<applicationName>" gerrit project    @UI @TektonGerritUI @TektonGerritCreateUI @TektonGerritNoDeployUI    Examples:      | applicationName            | defaultBranchName | codeLanguage             |      | java8-gradle-create-def-ui | master            | java8_gradle_application |      | rego-opa-create-def-ui     | master            | opa_library              |  Scenario Outline: Create empty project using Create strategy with Default versioning    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User creates codebase using default versioning type on gerrit      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |      | emptyProject      | True                |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    And User deletes application with name <applicationName>    And User deletes "<applicationName>" gerrit project    @UI @TektonGerritUI @TektonGerritCreateUI @TektonGerritNoDeployUI    Examples:      | applicationName                | defaultBranchName | codeLanguage       |      | python-3-8-create-def-empty-ui | master            | python_3_8_library |  Scenario Outline: Create application using Create strategy with semver versioning    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User creates codebase using semver versioning type on gerrit      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |      | startFromVersion  | 1.0.1               |      | startFromSnapshot | SNAPSHOT            |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    And User deletes application with name <applicationName>    And User deletes "<applicationName>" gerrit project    @UI @TektonGerritUI @TektonGerritCreateUI @TektonGerritNoDeployUI    Examples:      | applicationName              | defaultBranchName | codeLanguage               |      | js-react-cr-semver-ui        | master            | react_application          |      | js-pnpm-r-cr-semver-ui       | master            | react_pnpm_application     |      | helm-charts-lib-cr-semver-ui | master            | charts_library             |      | python-ans-lib-cr-semver-ui  | master            | python_3_8_ansible_library |  Scenario Outline:Create empty project using Create strategy with semver versioning    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User creates codebase using semver versioning type on gerrit      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |      | emptyProject      | True                |      | startFromVersion  | 1.0.1               |      | startFromSnapshot | SNAPSHOT            |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    And User deletes application with name <applicationName>    And User deletes "<applicationName>" gerrit project    @UI @TektonGerritUI @TektonGerritCreateUI @TektonGerritNoDeployUI    Examples:      | applicationName       | defaultBranchName | codeLanguage      |      | beego-semver-empty-ui | master            | beego_application |  Scenario Outline: Create application using Clone strategy with Default versioning    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User clones codebase using default versioning type on gerrit      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    And User deletes application with name <applicationName>    And User deletes "<applicationName>" gerrit project    @UI @TektonGerritUI @TektonGerritCloneUI @TektonGerritNoDeployUI    Examples:      | applicationName            | defaultBranchName | codeLanguage              |      | java11-gradle-clone-def-ui | master            | java11_gradle_application |      | rego-opa-clone-def-ui      | master            | opa_library               |  Scenario Outline: Create application using Clone strategy with semver versioning    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User clones codebase using semver versioning type on gerrit      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |      | startFromVersion  | 1.0.1               |      | startFromSnapshot | SNAPSHOT            |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    And User deletes application with name <applicationName>    And User deletes "<applicationName>" gerrit project    @UI @TektonGerritUI @TektonGerritCloneUI @TektonGerritNoDeployUI    Examples:      | applicationName                 | defaultBranchName | codeLanguage      |      | js-react-clone-semver-ui        | master            | react_application |      | helm-charts-lib-clone-semver-ui | master            | charts_library    |  Scenario Outline: Edit build/review pipelines for a branch    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User creates codebase using default versioning type on gerrit      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    When User open Edit <defaultBranchName> modal    And User edit application pipelines      | Review | <review> |      | Build  | <build>  |    Then User checks pipeline in codebase spec is updated with values      | applicationName | <applicationName> |      | review          | <review>          |      | build           | <build>           |    When User triggers build pipeline for <defaultBranchName> branch name    And User checks build pipeline in running status for <defaultBranchName> branch in <applicationName> codebase    And User checks pipeline tekton.dev/pipeline label is <build> in KubeRocketCI for <defaultBranchName> branch in <applicationName> codebase    And User deletes application with name <applicationName>    And User deletes "<applicationName>" gerrit project    @UI @TektonGerritUI @TektonGerritCreateUI @TektonGerritNoDeployUI    Examples:      | applicationName          | defaultBranchName | codeLanguage              | review                          | build                                  |      | java17-gradle-app-def-u2 | master            | java17_gradle_application | gerrit-gradle-java11-app-review | gerrit-gradle-java11-app-build-default |