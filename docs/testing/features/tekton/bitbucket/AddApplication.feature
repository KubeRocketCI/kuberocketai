Feature: Applications provisioning using Create strategy on bitbucket  Scenario Outline: Create application using Create strategy with Default versioning    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User creates codebase using default versioning type on bitbucket      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    And User deletes application with name <applicationName>#    And User deletes "<applicationName>" bitbucket project    @UI @TektonBitbucketUI @TektonBitbucketCreateUI @TektonBitbucketNoDeployUIRegression    Examples:      | applicationName        | defaultBranchName | codeLanguage              |      | java8-gr-crt-def-ui    | master            | java8_gradle_application  |      | java21-gr-crt-def-ui   | master            | java21_gradle_application |      | rego-opa-create-def-ui | master            | opa_library               |  Scenario Outline: Create empty project using Create strategy with Default versioning    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User creates codebase using default versioning type on bitbucket      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |      | emptyProject      | True                |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    And User deletes application with name <applicationName>#    And User deletes "<applicationName>" bitbucket project    @UI @TektonBitbucketUI @TektonBitbucketCreateUI @TektonBitbucketNoDeployUIRegression    Examples:      | applicationName                | defaultBranchName | codeLanguage       |      | python-3-8-create-def-empty-ui | master            | python_3_8_library |  Scenario Outline: Create application using Create strategy with semver versioning    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User creates codebase using semver versioning type on bitbucket      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |      | startFromVersion  | 1.0.1               |      | startFromSnapshot | SNAPSHOT            |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    And User deletes application with name <applicationName>#    And User deletes "<applicationName>" bitbucket project    @UI @TektonBitbucketUI @TektonBitbucketCreateUI @TektonBitbucketNoDeployUIRegression    Examples:      | applicationName              | defaultBranchName | codeLanguage               |      | js-r-pnpm-cr-semver-ui       | master            | react_pnpm_application     |      | helm-charts-lib-cr-semver-ui | master            | charts_library             |      | python-ans-lib-cr-semver-ui  | master            | python_3_8_ansible_library |  Scenario Outline:Create empty project using Create strategy with semver versioning    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User creates codebase using semver versioning type on bitbucket      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |      | emptyProject      | True                |      | startFromVersion  | 1.0.1               |      | startFromSnapshot | SNAPSHOT            |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    And User deletes application with name <applicationName>#    And User deletes "<applicationName>" bitbucket project    @UI @TektonBitbucketUI @TektonBitbucketCreateUI @TektonBitbucketNoDeployUIRegression    Examples:      | applicationName              | defaultBranchName | codeLanguage      |      | beego-create-semver-empty-ui | master            | beego_application |  Scenario Outline: Create application using Clone strategy with Default versioning    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User clones codebase using default versioning type on bitbucket      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |      | isPrivate         | true                |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    And User deletes application with name <applicationName>#    And User deletes "<applicationName>" bitbucket project    @UI @TektonBitbucketUI @TektonBitbucketCloneUI @TektonBitbucketNoDeployUIRegression    Examples:      | applicationName            | defaultBranchName | codeLanguage              |      | java17-gradle-clone-def-ui | master            | java17_gradle_application |      | rego-opa-clone-def-ui      | master            | opa_library               |  Scenario Outline: Create application using Clone strategy with semver versioning    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User clones codebase using semver versioning type on bitbucket      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |      | startFromVersion  | 1.0.1               |      | startFromSnapshot | SNAPSHOT            |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    And User deletes application with name <applicationName>#    And User deletes "<applicationName>" bitbucket project    @UI @TektonBitbucketUI @TektonBitbucketCloneUI @TektonBitbucketNoDeployUIRegression    Examples:      | applicationName            | defaultBranchName | codeLanguage           |      | js-react-clone-semver-ui   | master            | react_application      |      | js-r-pnpm-clone-semver-ui  | master            | react_pnpm_application |      | helm-charts-lib-cl-smvr-ui | master            | charts_library         |  Scenario Outline: Edit build/review pipelines for a branch    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User creates codebase using default versioning type on bitbucket      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    When User open Edit <defaultBranchName> modal    And User edit application pipelines      | Review | <review> |      | Build  | <build>  |    Then User checks pipeline in codebase spec is updated with values      | applicationName | <applicationName> |      | review          | <review>          |      | build           | <build>           |    When User triggers build pipeline for <defaultBranchName> branch name    And User checks build pipeline in running status for <defaultBranchName> branch in <applicationName> codebase    And User checks pipeline tekton.dev/pipeline label is <build> in KubeRocketCI for <defaultBranchName> branch in <applicationName> codebase    And User deletes application with name <applicationName>#    And User deletes "<applicationName>" bitbucket project    @UI @TektonBitbucketUI @TektonBitbucketNoDeployUIRegression    Examples:      | applicationName          | defaultBranchName | codeLanguage              | review                             | build                                     |      | java17-gradle-app-def-ui | master            | java17_gradle_application | bitbucket-gradle-java11-app-review | bitbucket-gradle-java11-app-build-default |  Scenario Outline: Check build/rerun with parameters    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User creates codebase using default versioning type on bitbucket      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    And User triggers build with parameters pipeline for <defaultBranchName> branch name of <applicationName> app with <newPipelineName> new pipeline name    When User checks pipeline with name "<newPipelineName>" started    When User opens Pipelines tab    And User select pipeline runs for <applicationName> codebase    When User opens pipeline details page for the selected pipeline run    And User triggers Run Again with parameters of <newPipelineName> pipeline with <newRerunName> new pipeline name    When User checks pipeline with name "<newRerunName>" started    @UI @TektonBitbucketUI @TektonBitbucketNoDeployUIRegression    Examples:      | applicationName | defaultBranchName | codeLanguage              | newPipelineName | newRerunName |      | run-with-param  | master            | java21_gradle_application | build-test      | test-rerun   |  Scenario Outline: Check protected label for codebase and branch    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    Given User creates default codebase on bitbucket      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    When User creates new branch      | applicationName | <applicationName> |      | branchName      | <newBranchName>   |    When User set protection label "delete-update" on codebase with <applicationName> name    When User opens Components tab    When User select created application <applicationName> name    Then User sees created <defaultBranchName> branch as default    Then User checks that edit button is disabled for codebase    Then User checks that delete button is disabled for codebase    When User set protection label "" on codebase with <applicationName> name    When User opens Components tab    When User select created application <applicationName> name    Then User checks that edit button is enabled for codebase    Then User checks that delete button is enabled for codebase    When User set protection label "delete-update" on codebaseBranch with <applicationName>-<newBranchName> name    Then User checks that edit button is disabled for "<newBranchName>" codebase branch    Then User checks that delete button is disabled for "<newBranchName>" codebase branch    When User set protection label "" on codebaseBranch with <applicationName>-<newBranchName> name    Then User checks that edit button is enabled for "<newBranchName>" codebase branch    Then User checks that delete button is enabled for "<newBranchName>" codebase branch    @UI @TektonBitbucketUI @TektonBitbucketNoDeployUIRegression    Examples:      | applicationName | defaultBranchName | codeLanguage              | newBranchName |      | protected-app   | master            | java21_gradle_application | new           |  Scenario Outline: Check User unavailable create duplicate the application on bitbucket    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User creates codebase using default versioning type on bitbucket      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |    Then User sees success status and correct values in fields for <applicationName> application      | codeLanguage | <codeLanguage> |    Given Wait for 300 seconds    When User opens Components tab    When User cannot creates exist codebase using creates strategy using on bitbucket      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    And User cannot creates exist codebase using clones strategy using on bitbucket      | applicationName | <applicationName> |      | codeLanguage    | <codeLanguage>    |    And User cannot creates exist codebase for imports strategy using on bitbucket      | applicationName   | <applicationName>   |      | codeLanguage      | <codeLanguage>      |      | defaultBranchName | <defaultBranchName> |      | isPrivate         | true                |      | versioningType    | default             |    And User deletes application with name <applicationName>    @UI @TektonBitbucketUI @TektonBitbucketCreateUI @TektonBitbucketNoDeployUIRegression    Examples:      | applicationName        | defaultBranchName | codeLanguage             |      | java8-gr-crt-dup-ui-bb | master            | java8_gradle_application |