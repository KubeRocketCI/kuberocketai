Feature: Applications provisioning using Create strategy on bitbucket  @UI @TektonBitbucketUI @TektonBitbucketNoDeployUIRegression  Scenario: Input validations on first stage of Create strategy with all empty inputs    Given User opens KubeRocketCI as default user    When User opens Components tab    And User fills Create Component phase one popup with values      | codebaseStrategy | create            |      | gitProvider      | bitbucket         |      | applicationName  |                   |      | codeLanguage     | empty_application |    Then User checks warning messages are present      | Enter the repository name     |      | Enter the Component name      |      | Enter application description |      | Select codebase language      |  Scenario Outline: Input validations on first stage of Create strategy with all wrong inputs    Given User opens KubeRocketCI as default user    When User opens Components tab    And User fills Create Component first phase popup with values      | codebaseStrategy | create                    |      | gitProvider      | bitbucket                 |      | applicationName  | /test                     |      | codeLanguage     | only_language_application |    Then User checks warning messages are present      | Repository name cannot start or end with a slash symbol                                                                                                                                |      | Component name must be not less than two characters long. It must contain only lowercase letters, numbers, and dashes. It cannot start or end with a dash, and cannot have whitespaces |      | Select application language version/framework                                                                                                                                          |      | Select application build tool.                                                                                                                                                         |    Then User checks warning messages aren't present      | Enter application description |      | Select codebase language      |    And User fills Create Component first phase popup with values      | codebaseStrategy | create         |      | gitProvider      | bitbucket      |      | applicationName  | app/           |      | codeLanguage     | <codeLanguage> |    Then User checks warning messages are present      | Repository name cannot start or end with a slash symbol                                                                                                                                |      | Component name must be not less than two characters long. It must contain only lowercase letters, numbers, and dashes. It cannot start or end with a dash, and cannot have whitespaces |    Then User checks warning messages aren't present      | Select application language version/framework |      | Select application build tool.                |    When User fills Create Component first phase popup with values      | codebaseStrategy | create                    |      | gitProvider      | bitbucket                 |      | applicationName  | a                         |      | codeLanguage     | only_language_application |    Then User checks warning messages are present      | Repository name must be at least 3 characters long                                                                                                                                     |      | Component name must be not less than two characters long. It must contain only lowercase letters, numbers, and dashes. It cannot start or end with a dash, and cannot have whitespaces |      | Select application language version/framework                                                                                                                                          |      | Select application build tool.                                                                                                                                                         |    Then User checks warning messages aren't present      | Repository name cannot start or end with a slash symbol |      | Enter application description                           |      | Select codebase language                                |    And User fills Create Component first phase popup with values      | codebaseStrategy | create         |      | gitProvider      | bitbucket      |      | applicationName  | dтест          |      | codeLanguage     | <codeLanguage> |    Then User checks warning messages are present      | Only alphanumeric characters, dot, dash, and underscore are allowed                                                                                                                    |      | Component name must be not less than two characters long. It must contain only lowercase letters, numbers, and dashes. It cannot start or end with a dash, and cannot have whitespaces |    And User fills Create Component first phase popup with values      | codebaseStrategy | create         |      | gitProvider      | bitbucket      |      | applicationName  | test_test      |      | codeLanguage     | <codeLanguage> |    Then User checks warning messages are present      | Component name must be not less than two characters long. It must contain only lowercase letters, numbers, and dashes. It cannot start or end with a dash, and cannot have whitespaces |    Then User checks warning messages aren't present      | Only alphanumeric characters, dot, dash, and underscore are allowed |    And User fills Create Component first phase popup with values      | codebaseStrategy | create         |      | gitProvider      | bitbucket      |      | applicationName  | DDD            |      | codeLanguage     | <codeLanguage> |    Then User checks warning messages are present      | Component name must be not less than two characters long. It must contain only lowercase letters, numbers, and dashes. It cannot start or end with a dash, and cannot have whitespaces |    And User fills Create Component first phase popup with values      | codebaseStrategy | create                          |      | gitProvider      | bitbucket                       |      | applicationName  | test30plustest30plustest30plus1 |      | codeLanguage     | <codeLanguage>                  |    Then User checks warning messages are present      | Component name must be less than 30 characters long |    @UI @TektonBitbucketUI @TektonBitbucketNoDeployUIRegression    Examples:      | codeLanguage             |      | java8_gradle_application |  Scenario Outline: Input validations on first and seconds stages of Create strategy with all wrong/empty inputs    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User fills Create Component phase one popup with values      | codebaseStrategy | create            |      | gitProvider      | bitbucket         |      | applicationName  | <applicationName> |      | codeLanguage     | <codeLanguage>    |    And User fills Create Component phase two popup with values      | defaultBranchName |            |      | deployOption      | helm-chart |      | versioningType    | semver     |      | startFromVersion  |            |      | startFromSnapshot |            |      | jiraIntegration   | true       |      | commitPattern     |            |      | jiraPattern       |            |      | componentsPattern |            |      | fixVersionPattern |            |      | labelsPattern     |            |    Then User checks warning messages are present      | Specify a branch to work in.                                          |      | Specify the initial version.                                          |      | Add a suffix.                                                         |      | Specify the pattern to find a Jira ticket number in a commit message. |      | Add at least one variable.                                            |    And User fills Create Component phase two popup with values      | defaultBranchName | test!      |      | deployOption      | helm-chart |      | versioningType    | semver     |      | startFromVersion  | 0,0,0      |      | startFromSnapshot | !_test).,  |      | jiraIntegration   | true       |      | commitPattern     | !_test).,  |      | jiraPattern       | !_test).,  |      | componentsPattern | !_test).,  |      | fixVersionPattern | !_test).,  |      | labelsPattern     | !_test).,  |    Then User checks warning messages are present      | Enter valid default branch name        |      | Enter valid semantic versioning format |    Then User checks warning messages aren't present      | Specify a branch to work in.                                          |      | Specify the initial version.                                          |      | Add a suffix.                                                         |      | Specify the pattern to find a Jira ticket number in a commit message. |      | Add at least one variable.                                            |    @UI @TektonBitbucketUI @TektonBitbucketNoDeployUIRegression    Examples:      | applicationName   | codeLanguage             |      | cr-input-validate | java8_gradle_application |  Scenario Outline: Input validations on first stage of Clone strategy with all wrong/empty inputs    Given User opens KubeRocketCI as default user    When User deletes <applicationName> Sonar project if present    When User opens Components tab    And User fills Create Component phase one popup with values      | codebaseStrategy | clone             |      | repositoryUrl    | empty             |      | repositoryLogin  |                   |      | repositoryToken  |                   |      | gitProvider      | bitbucket         |      | applicationName  | <applicationName> |      | codeLanguage     | <codeLanguage>    |    Then User checks warning messages are present      | Specify the application URL in the following format: http(s)://git.example.com/example. |      | Enter repository login                                                                  |      | Enter the repository password or access token                                           |    And User fills Create Component phase one popup with values      | codebaseStrategy | clone             |      | repositoryUrl    | httptest          |      | repositoryLogin  | login             |      | repositoryToken  | key               |      | gitProvider      | bitbucket         |      | applicationName  | <applicationName> |      | codeLanguage     | <codeLanguage>    |    Then User checks warning messages are present      | Specify the application URL in the following format: http(s)://git.example.com/example. |    Then User checks warning messages aren't present      | Enter repository login                        |      | Enter the repository password or access token |    @UI @TektonBitbucketUI @TektonBitbucketNoDeployUIRegression    Examples:      | applicationName      | codeLanguage             |      | clone-input-validate | java8_gradle_application |